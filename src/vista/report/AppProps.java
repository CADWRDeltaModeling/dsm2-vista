package vista.report;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;import java.util.Properties;/** *  * Properties for the application. These properties are stored in the *  * app.props file in the [user.dir]/.calsim directory. These directories *  * & files are created if they do not exist. *  *  *  * @author Nicky Sandhu *  * @version $Id: AppProps.java,v 1.1 2003/10/02 20:49:16 redwood Exp $ */public class AppProps {	public static Properties props = new Properties();	public static void initializeProps() {		File appPropsDir = checkForPropsDir();		File appPropsFile = new File(appPropsDir.getPath() + File.separator				+ "app.props");		if (!appPropsFile.exists()) {			// then look in jar file for defaults & save to props file			try {				props.load(Object.class						.getResourceAsStream("/calsim/app/app.props"));				save();			} catch (IOException ioe) {				ioe.printStackTrace(System.err);			}		} else { // read from app.props file			try {				// always load defaults and then user customized properties				props.load(Object.class						.getResourceAsStream("/calsim/app/app.props"));				props.load(new FileInputStream(appPropsFile));				// make sure the version is matched or exists. If not load from				// jar file first and then from props file again				Properties jarprops = new Properties();				jarprops.load(Object.class						.getResourceAsStream("/calsim/app/app.props"));				String propVersion = props.getProperty("AppProps.version");				String jarPropVersion = jarprops						.getProperty("AppProps.version");				if (propVersion == null						||						new Integer(propVersion).intValue() < new Integer(								jarPropVersion).intValue()) {					// load the latest					props.load(Object.class							.getResourceAsStream("/calsim/app/app.props"));					// override with users properties					props.load(new FileInputStream(appPropsFile));					// finally override the versionid for app props					props.put("AppProps.version", jarPropVersion);					// finally save all this work					save();				}			} catch (IOException ioe) {				ioe.printStackTrace(System.err);			}		}	}	/**
    *
    */	public static File checkForPropsDir() {		// first look in user.home for .calsim directory		String appDir = System.getProperty("user.home") + File.separator				+ ".calsim";		File appPropsDir = new File(appDir);		if (!appPropsDir.exists()) {			// create this directory...			appPropsDir.mkdir();		}		return appPropsDir;	}	/**
    *
    */	public static void save() {		// look for .calsim directory in user.home & a file called app.props		File appPropsDir = checkForPropsDir();		File appPropsFile = new File(appPropsDir.getPath() + File.separator				+ "app.props");		// then look in jar file for defaults & save to props file		try {			props.save(new FileOutputStream(appPropsFile),					"application user properties");		} catch (IOException ioe) {			ioe.printStackTrace(System.err);		}	}	static {		initializeProps();	}	/**
    *
    */	public static String getProperty(String key) {		return props.getProperty(key);	}	/**
    *
    */	public static void setProperty(String key, String val) {		props.put(key, val);	}}