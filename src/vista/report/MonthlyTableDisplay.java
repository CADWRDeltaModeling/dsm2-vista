package vista.report;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.KeyEvent;import javax.swing.JFrame;import javax.swing.JMenu;import javax.swing.JMenuBar;import javax.swing.JMenuItem;import javax.swing.JTextPane;import javax.swing.KeyStroke;import javax.swing.text.BadLocationException;import javax.swing.text.DefaultStyledDocument;import javax.swing.text.Style;import javax.swing.text.StyleConstants;import javax.swing.text.StyleContext;import javax.swing.text.StyledDocument;import vista.set.DataReference;import vista.set.RegularTimeSeries;/** *  *  *  * @author Nicky Sandhu "$Id: MonthlyTableDisplay.java,v 1.1 2003/10/02 20:49:17 *         redwood Exp $ *  *         Last change: AM 21 Dec 1999 12:05 pm */public class MonthlyTableDisplay extends TextDisplay {	public static boolean DEBUG = false;	public static String[] itemText = {	"Table",	"Graph"	};	public static String[] toolTipText = {	"Shows data in a table",	"Shows data in a graph"	};	public static int[] itemKeys = {	KeyEvent.VK_T,	KeyEvent.VK_G	};	/**
   *
   */	public MonthlyTableDisplay(DataReference ref, boolean isWaterYear) {		super();		setFrameTitle("MONTHLY REPORT");		_ref = ref;		_mr = new MonthlyReport((RegularTimeSeries) _ref.getData(),		_ref.getPathname(),		_ref.getFilename()		);		addDocument(_mr.getStyledDocument());	}	/**
    *
    */	public MonthlyTableDisplay(DataReference ref, boolean isWaterYear,			int[] years) {		super();		setFrameTitle("MONTHLY REPORT");		_ref = ref;		_mr = new MonthlyReport((RegularTimeSeries) _ref.getData(),		_ref.getPathname(),		_ref.getFilename(),		isWaterYear,		years);		addDocument(_mr.getStyledDocument());	}	/**
    *
    */	public MonthlyTableDisplay(DataReference[] refs, boolean isWaterYear,			int[] years) {		super();		setFrameTitle("MONTHLY REPORT");		_refs = refs;		StyledDocument doc = null;		for (int i = 0; i < _refs.length; i++) {			DataReference ref = _refs[i];			if (ref == null)				continue;			MonthlyReport mr = new MonthlyReport((RegularTimeSeries) ref					.getData(),			ref.getPathname(),			ref.getFilename(),			isWaterYear,			years);			if (doc == null)				doc = mr.getStyledDocument();			else {				doc = mr.appendTo(doc, 0);			}		}		if (doc != null)			addDocument(doc);	}	/**
   *
   */	public MonthlyTableDisplay(String[] lines) {		super();		String lineSeparator = System.getProperty("line.separator");		StyledDocument doc = new DefaultStyledDocument();		StyleContext sc = new StyleContext();		Style def = sc.getStyle(StyleContext.DEFAULT_STYLE);		Style normal = sc.addStyle("Normal", def);		StyleConstants.setFontSize(normal, 8);		for (int i = 0; i < lines.length; i++) {			try {				doc.insertString(doc.getEndPosition().getOffset() - 1, lines[i]						+ lineSeparator, normal);			} catch (BadLocationException ble) {				System.err.println("Could not insert string for line: "						+ lines[i]);			}		}		addDocument(doc);	}	/**
    *
    */	public JMenuBar getJMenuBar() {		if (_mbar == null)			_mbar = createJMenuBar();		return _mbar;	}	/**
   *
   */	public JMenuBar createJMenuBar() {		int mindex = 0;		JMenuItem tableItem = new JMenuItem(itemText[mindex]);		tableItem.setToolTipText(toolTipText[mindex]);		tableItem.setAccelerator(KeyStroke.getKeyStroke(itemKeys[mindex],				KeyEvent.CTRL_MASK));		tableItem.addActionListener(new ActionListener() {			public void actionPerformed(ActionEvent evt) {				table();			}		});		//		mindex++;		JMenuItem graphItem = new JMenuItem(itemText[mindex]);		graphItem.setToolTipText(toolTipText[mindex]);		graphItem.setAccelerator(KeyStroke.getKeyStroke(itemKeys[mindex],				KeyEvent.CTRL_MASK));		graphItem.addActionListener(new ActionListener() {			public void actionPerformed(ActionEvent evt) {				graph();			}		});		//		//		_mbar = super.createJMenuBar();		JMenu fileMenu = _mbar.getMenu(0);		fileMenu.insert(tableItem, fileMenu.getItemCount() - 2);		fileMenu.insert(graphItem, fileMenu.getItemCount() - 2);		return _mbar;	}	/**
   *
   */	void table() {		if (DEBUG)			System.out.println("Table");		JFrame fr = null;		if (_ref != null)			fr = AppUtils.tabulate(_ref);		else			fr = AppUtils.tabulate(_refs);		if (fr != null)			fr.setVisible(true);	}	/**
   *
   */	void graph() {		if (DEBUG)			System.out.println("Graph");		JFrame fr = null;		if (_ref != null)			fr = AppUtils.plot(_ref);		else			fr = AppUtils.plot(_refs);		if (fr != null)			fr.setVisible(true);	}	private StyledDocument _doc;	private DataReference _ref;	private DataReference[] _refs;	private MonthlyReport _mr;	private JMenuBar _mbar;	private JTextPane _jtp;}